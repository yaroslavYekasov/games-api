openapi: 3.0.2
info:
    title: Games-API
    version: 1.0.0
    description: >-
        "### This is a Swagger UI for our Games API  \n\n### Error handling\nErrors are presented using the
        HTTP status codes 400-599. The response include a more detailed explanation about the error in the
        body.\n\n```\n{\n  \"error\": \"Cleartext explanation of the error that occurred\"\n}\n```\n\n###
        Generic API errors\nThese error responses can be returned by any of the described endpoints.\n\n| HTTP
        status  |  Description |\n|---|---|\n| 400| Bad input parameters or invalid request. More information
        can be found in the response body.\n| 401| The consumer does not have access to the requested resource
        or the provided token is not valid.\n| 404| The requested resource can not be found or the user does
        not have access to the resource.\n| 5XX| A server error has occurred while processing the request."
paths:
    /games:
        get:
            tags:
                - games
            responses:
                '200':
                    content:
                        application/json:
                            examples:
                                List of games:
                                    value:
                                        -
                                            name: Witcher 3
                                        -
                                            name: Cyberpunk 2077
            summary: Get a list of all games
            description: Returns a list of all games in API
    '/games/{id}':
        get:
            tags:
                - details
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of a given game:
                                    value:
                                        id: 3
                                        name: The Last of Us
                                        price: 49.99
                    description: Returns full details of a given id game
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                'Game with ID {id} was not found':
                                    value:
                                        error: 'Game with ID {id} was not found'
                    description: Game \w+ was not found in game array.
            operationId: id
            summary: Get full details of a game
            description: Returns full details of a given id game
        delete:
            tags:
                - delete-game
            responses:
                '204':
                    description: Game successfully deleted.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: Game was not found in games array.
                    description: Game was not found in games array.
            summary: Deletes a game
            description: Deletes a game by its ID.
        parameters:
            -
                name: id
                description: The ID of the game to update.
                schema:
                    type: integer
                in: path
                required: true
    '/games/{name}/{price}':
        post:
            tags:
                - create
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/game'
                            examples:
                                Tetris:
                                    value:
                                        id: 9
                                        name: Tetris
                                        price: 0.99
                    description: The new game was created
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing params:
                                    value:
                                        error: One or all params are missing.
                    description: One or all params are missing.
                '409':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Exist:
                                    value:
                                        error: The game already exists.
                    description: The game already exists
            summary: Create a new game
            description: A new game using name and price
        parameters:
            -
                name: name
                description: Name of the game
                schema:
                    type: string
                in: path
                required: true
            -
                name: price
                description: Price of the game
                schema:
                    format: float
                    type: number
                in: path
                required: true
    '/games/{id}/{name}/{price}':
        put:
            tags:
                - update-game
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/game'
                            examples:
                                Updated Game:
                                    value:
                                        id: 3
                                        name: Updated Game
                                        price: 59.99
                    description: The game was successfully updated.
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Invalid data:
                                    value:
                                        error: Invalid game data. Name and price are required.
                    description: 'Invalid input, object invalid.'
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        error: Game with the specified ID was not found.
                    description: Game not found.
                '409':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Conflict:
                                    value:
                                        error: A game with the same name already exists.
                    description: 'Conflict, game name already exists.'
            summary: Update a game
            description: Updates the details of a game by its ID.
        parameters:
            -
                name: id
                description: The ID of the game to update.
                schema:
                    type: integer
                in: path
                required: true
            -
                name: name
                description: The new name of the game.
                schema:
                    type: string
                in: path
                required: true
            -
                name: price
                description: The new price of the game.
                schema:
                    format: float
                    type: number
                in: path
                required: true
components:
    schemas:
        error:
            title: Error
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message.
        game:
            title: Root Type for game
            description: Game
            required:
                - id
                - name
                - price
            type: object
            properties:
                id:
                    description: The unique identifier for a game.
                    type: integer
                name:
                    description: The game name.
                    type: string
                price:
                    format: float
                    description: The price of the game in USD.
                    type: number
            example:
                id: 1
                name: Updated Game
                price: 59.99